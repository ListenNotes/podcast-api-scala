/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package podcast.api.scala.demo

import com.listennotes.podcast_api.Client
import com.listennotes.podcast_api.exception._

object App {
  def main(args: Array[String]): Unit = {
    // If apiKey is not set or an empty string, then we'll connect
    // to the api mock server, which returns fake data for testing
    val apiKey = scala.util.Properties.envOrElse("LISTEN_API_KEY", "")
    val client = new Client(apiKey)

    // Parameters are passed via this HashMap
    // All parameters can be found at:
    //     https://www.listennotes.com/api/docs/
    val parameters = new java.util.HashMap[String, String]
    parameters.put("q", "startup")
    parameters.put("type", "episode")    
    parameters.put("sort_by_date", "1")    

    try {
      val response = client.search(parameters)

      // response.toJSON() returns an org.json.JSONObject
      println(response.toJSON().toString(2))

      println("\n=== Some stats of your account ===\n")
      println("Free Quota this month: " + response.getFreeQuota() + " requests")
      println("Usage this month: " + response.getUsage() + " requests")    
    } catch {
      case e: AuthenticationException => println("Wrong API key")
      case e: RateLimitException => println(" For FREE plan, exceeding the quota limit; or for all plans, sending too many requests too fast and exceeding the rate limit.")
    }
  }
}
